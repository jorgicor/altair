#include <stdlib.h>
#include <stdio.h>
#include <memory.h>

#define SNADATA_LEN 131103

using namespace std;

int main(int argc, char *argv[])
{
  const unsigned char sna_registers[28] =
  {
    0x3f,0x58,0xff,0xb9,0x5c,0xff,0xff,0x44,0x00,0x7f,0x10,0x06,
    0x00,0x4b,0x17,0x3a,0x5c,0xd4,0x03,0x04,0xe0,0x5c,0x00,0xb4,
    0x5d,0x01,0x00,0x00
  };

  const unsigned char sna_sysvars[450] =
  {
    0xff,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0x00,0x23,0x05,0x00,
    0x00,0x00,0x00,0x00,0x01,0x00,0x06,0x00,0x0b,0x00,0x01,0x00,
    0x01,0x00,0x06,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3c,0x40,0x00,0x00,0x00,
    0x21,0xb8,0x5d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x38,0x00,0x00,0xcb,0x5c,0x00,0x00,0xb6,0x5c,0xb6,0x5c,0xcb,
    0x5c,0x00,0x00,0xca,0x5c,0xcc,0x5c,0xcc,0x5c,0x00,0x00,0x00,
    0x00,0xce,0x5c,0xce,0x5c,0xce,0x5c,0x00,0x92,0x5c,0x10,0x02,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0xad,0x00,0x00,0x58,0xff,0x00,0x00,0x21,0x00,0x5b,0x05,0x17,
    0x00,0x40,0xfc,0x50,0x21,0x18,0x05,0x17,0x01,0x38,0x00,0x38,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xbf,0x5d,
    0xff,0xff,0xf4,0x09,0xa8,0x10,0x4b,0xf4,0x09,0xc4,0x15,0x53,
    0x81,0x0f,0xc4,0x15,0x52,0xf4,0x09,0xc4,0x15,0x50,0x80,0x80,
    0x0d,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0xdb,0x02,0xdb,0x02,0x7c,0x38,
    0xd4,0x03,0x4d,0x00,0xa8,0x5c,0xff,0xff,0xb8,0x5c,0x5c,0x00,
    0xfe,0x15,0x58,0xff,0xe1,0x15,0x3b,0x0f,0x7f,0x10,0xbc,0x5d,
    0xb4,0x12,0x00,0x3e,0x00,0x00
  };

  FILE *in;
  FILE *out;
  char work[131105];
  unsigned int c, p;
  int i;

  if(argc > 4) {
    if ((out = fopen(argv[1], "wb")) == NULL) {
      printf("\n\rcannot create output...\n\r");
      return EXIT_FAILURE;
    }

    memset(work, 0, 131103);
    memcpy(work, sna_registers, 27);
    memset(work + 0x181b, 7, 768);
    memcpy(work + 0x1c1b, sna_sysvars, 449);

    for(i = 3; i < argc; i += 2) {
      if ((in = fopen(argv[i], "rb")) == NULL) {
        printf("\n\rfile %s not found...", argv[i]);
        continue;
      }

      c = atoi(argv[i + 1]);
      if(c < 16384 || c > 131072) {
        printf("\n\rincorrect destination address for file %s...", argv[i]);
        continue;
      }

      if(c > 65535)
        c -= 16353;
      else
        c -= 16357;

      p = ((131103 - c) > 49152) ? 49152 : (131103 - c);

      fread(work + c, p, sizeof(char), in);
      fclose(in);
    }

    c = atoi(argv[2]);
    if(c < 16384 || c > 65535) {
      printf("\n\rincorrect address in PC register...\n\r");
      c = 4535;
    }

    work[49179] = (unsigned char)(c % 256);
    work[49180] = (unsigned char)(c / 256);
    work[49181] = 16;
    work[49182] = 0;

    fwrite(work, 131103, sizeof(char), out);
    fclose(out);
  }
  else {
    printf("\n\r= makeSNA v0.1 by martin.borik@gmail.com =\n\r==========================================\n\r");
    printf("\n\rUse:\n\rmakesna output.sna {PC} input1 {dest_adr} [input {dest_adr}]*\n\r");
    printf("\n\rExample:\n\rmakesna 128game.sna 24200 program.bin 24200 page17.b 65536 page19.b 81920\n\n\r");
    return EXIT_FAILURE;
  }

  return EXIT_SUCCESS;
}
